<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="PHP_CodeSniffer"
    xsi:noNamespaceSchemaLocation="phpcs.xsd">
    <description>The coding standard for PHP_CodeSniffer itself.</description>

    <file>public</file>
    <file>src</file>

    <exclude-pattern>*/vendor/*</exclude-pattern>

    <arg name="basepath" value="." />
    <arg name="colors" />
    <arg name="parallel" value="75" />
    <arg value="p" />

    <!-- Include the whole PEAR standard -->
    <rule ref="PEAR">
        <exclude name="PEAR.NamingConventions.ValidFunctionName" />
        <exclude name="PEAR.NamingConventions.ValidVariableName" />
        <exclude name="PEAR.Commenting.ClassComment" />
        <exclude name="PEAR.Commenting.FileComment" />
        <exclude name="PEAR.Commenting.InlineComment" />
        <exclude name="Generic.Files.LineLength" />
    </rule>
    <!--
       You can hard-code custom php.ini settings into your custom standard.
       The following tag sets the memory limit to 64M.
    <ini name="memory_limit" value="64M"/>-->

    <!-- 2. Files -->

    <!-- 2.1. PHP Tags -->

    <!-- PHP code MUST use the long <?php ?> tags or the short-echo <?= ?> tags; it MUST NOT use the
    other tag variations. -->
    <rule ref="Generic.PHP.DisallowShortOpenTag.EchoFound">
        <severity>0</severity>
    </rule>

    <!-- We use custom indent rules for arrays -->
    <rule ref="Generic.Arrays.ArrayIndent" />
    <rule ref="Squiz.Arrays.ArrayDeclaration.KeyNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.ValueNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned">
        <severity>0</severity>
    </rule>
    <rule ref="Squiz.Arrays.ArrayDeclaration.CloseBraceNewLine">
        <severity>0</severity>
    </rule>

    <!-- Only one argument per line in multi-line function calls -->
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <properties>
            <property name="allowMultipleArguments" value="false" />
        </properties>
    </rule>

    <!-- Have 12 chars padding maximum -->
    <rule ref="Generic.Formatting.MultipleStatementAlignment">
        <properties>
            <property name="maxPadding" value="12" />
        </properties>
    </rule>

    <!-- Ban some functions -->
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="sizeof" value="count" />
                <element key="delete" value="unset" />
                <element key="print" value="echo" />
                <element key="is_null" value="null" />
                <element key="create_function" value="null" />
            </property>
        </properties>
    </rule>

    <!-- Do not allow ambiguous conditions. -->
    <rule ref="Generic.CodeAnalysis.RequireExplicitBooleanOperatorPrecedence" />

    <!-- Do not allow unreachable code. -->
    <rule ref="Squiz.PHP.NonExecutableCode" />

    <!-- 2.2. Character Encoding -->

    <!-- PHP code MUST use only UTF-8 without BOM. -->
    <rule ref="Generic.Files.ByteOrderMark" />

    <rule ref="Generic.PHP.DisallowShortOpenTag" />
    <rule ref="Generic.Commenting.Todo" />
    <rule ref="Generic.ControlStructures.DisallowYodaConditions" />
    <rule ref="Generic.ControlStructures.InlineControlStructure" />

    <!-- There MUST NOT be more than one statement per line. -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements" />
    <rule ref="Generic.Formatting.SpaceAfterCast" />
    <rule ref="Generic.NamingConventions.ConstructorName" />
    <rule ref="Generic.PHP.DeprecatedFunctions" />
    <rule ref="Generic.PHP.LowerCaseKeyword" />
    <rule ref="Generic.Strings.UnnecessaryStringConcat" />
    <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing" />
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />

    <!-- These rules enforce PSR-2 and PSR-12 standards for class and file formatting. -->
    <rule ref="PSR2.Classes.PropertyDeclaration" />
    <rule ref="PSR2.Methods.MethodDeclaration" />
    <rule ref="PSR2.Files.EndFileNewline" />
    <rule ref="PSR12.Files.OpenTag" />

    <!-- Include the whole PSR1 standard -->
    <rule ref="PSR1">
        <exclude name="PSR1.Files.SideEffects" />
    </rule>

    <!-- Class constants MUST be declared in all upper case with underscore separators. -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName" />

    <!-- These rules ensure that arrays are declared and formatted correctly. -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing" />
    <rule ref="Squiz.Arrays.ArrayDeclaration" />

    <!-- These rules ensure proper structure and formatting of control structures. -->
    <rule ref="Squiz.ControlStructures.ControlSignature" />
    <rule ref="Squiz.ControlStructures.ElseIfDeclaration" />

    <!-- These rules ensure proper formatting and spacing for various code elements. -->
    <rule ref="Squiz.Formatting.OperatorBracket" />
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing" />
    <rule ref="Squiz.Operators.ComparisonOperatorUsage" />
    <rule ref="Squiz.Scope.MethodScope" />
    <rule ref="Squiz.Strings.ConcatenationSpacing" />


    <!-- These rules ensure proper whitespace usage throughout the codebase. -->
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing" />
    <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace" />
    <rule ref="Squiz.WhiteSpace.FunctionSpacing" />
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing" />
    <rule ref="Squiz.WhiteSpace.OperatorSpacing" />
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

    <!-- Class names MUST be declared in StudlyCaps. -->
    <rule ref="Squiz.Classes.ValidClassName" />

    <!-- These rules ensure proper commenting practices are followed throughout the codebase. -->
    <rule ref="Squiz.Commenting.BlockComment" />
    <rule ref="Squiz.Commenting.DocCommentAlignment" />
    <rule ref="Squiz.Commenting.EmptyCatchComment" />
    <rule ref="Squiz.Commenting.InlineComment" />
    <rule ref="Squiz.Commenting.LongConditionClosingComment" />
    <rule ref="Squiz.Commenting.PostStatementComment" />
    <rule ref="Squiz.Commenting.VariableComment" />
    <rule ref="Squiz.Commenting.ClosingDeclarationComment" />

    <!-- Method arguments with default values MUST go at the end of the argument list. -->
    <rule ref="PEAR.Functions.ValidDefaultValue" />

    <!-- The closing ?> tag MUST be omitted from files containing only PHP. -->
    <rule ref="Zend.Files.ClosingTag" />
</ruleset>